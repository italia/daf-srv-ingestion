{
  "name": "feed-creation",
  "description": "feed creation workflow",
  "version": 1,
  "tasks": [

    {
      "name": "check-folder-wf-task",
      "taskReferenceName": "check-folder-wf",
      "inputParameters": {
        "checkInput": "${workflow.input.feedInput}"
      },
      "type": "SUB_WORKFLOW",
      "subWorkflowParam": {
        "name": "check-folder",
        "version": 1
      }
    },

    {
      "name": "spark-job-launch",
      "taskReferenceName": "spark-job-launch",
      "inputParameters": {
        "input_spark_task": {
			"code": [
                    "import it.gov.daf.ingestion.hadoop.{CsvChars, SparkOperations}",
                    "val schema = \"\"\"${workflow.input.feedInput.schemaString}\"\"\"",
                    "val file = \"\"\"${workflow.input.feedInput.file}\"\"\"",
                    "val isCsv=${workflow.input.feedInput.isCsv}",
                    "val phUri = \"\"\"${workflow.input.feedInput.datasetPath}${workflow.input.feedInput.datasetName}\"\"\"",
                    "val csvChars = CsvChars( \"\"\"${workflow.input.feedInput.csvChars.quote}\"\"\", \"\"\"${workflow.input.feedInput.csvChars.delimiter}\"\"\", \"\"\"${workflow.input.feedInput.csvChars.escape}\"\"\" )",
                    "SparkOperations.callValidateIngestedFile( Some(schema), file, isCsv, Some(csvChars), phUri )(spark)"
            ],
            "authHeader": {
                "name":"${workflow.input.feedInput.authHeader.name}",
                "authType": "${workflow.input.feedInput.authHeader.authType}",
                "token":"${workflow.input.feedInput.authHeader.token}"
            }

	    }
      },
      "type": "SIMPLE"
    },
    {
    "name": "call-service",
    "taskReferenceName": "set-permission-on-folder",
    "inputParameters": {
      "http_request": {
        "uri": "${workflow.input.feedInput.env.sec-man-url}/hdfs/setACL${workflow.input.feedInput.datasetPath}${workflow.input.feedInput.datasetName}?groupName=impala&groupType=user&permission=rwx",
        "method": "PUT",
        "body": {},
        "headers":{
          "Authorization": "${workflow.input.feedInput.authHeader.authType} ${workflow.input.feedInput.authHeader.token}"
        }
      }
    },
    "type": "HTTP"
    },
    {
      "name": "call-service",
      "taskReferenceName": "create-table-on-file",
      "inputParameters": {
        "http_request": {
          "uri": "${workflow.input.feedInput.env.sec-man-url}/impala/createTableFromFile${workflow.input.feedInput.datasetPath}${workflow.input.feedInput.datasetName}?schemaName=${workflow.input.feedInput.dbName}&tableName=${workflow.input.feedInput.tableName}",
          "method": "PUT",
          "body": {},
          "headers":{
            "Authorization": "${workflow.input.feedInput.authHeader.authType} ${workflow.input.feedInput.authHeader.token}"
          }
        }
      },
      "type": "HTTP"
    },
    {
      "name": "call-service",
      "taskReferenceName": "create-grant",
      "inputParameters": {
        "http_request": {
          "uri": "${workflow.input.feedInput.env.sec-man-url}/impala/createGrant?schemaName=${workflow.input.feedInput.dbName}&tableName=${workflow.input.feedInput.tableName}",
          "method": "PUT",
          "body": {},
          "headers":{
            "Authorization": "${workflow.input.feedInput.authHeader.authType} ${workflow.input.feedInput.authHeader.token}"
          }
        }
      },
      "type": "HTTP"
    },
    {
      "name": "invalids-initialization-wf-task",
      "taskReferenceName": "invalids-initialization-wf",
      "inputParameters": {
        "invalidsInput": "${workflow.input.feedInput}",
        "init":"${check-folder-wf.output}"
      },
      "type": "SUB_WORKFLOW",
      "subWorkflowParam": {
        "name": "invalids-initialization",
        "version": 1
      }
    },
    {
      "name": "call-service",
      "taskReferenceName": "move-uploaded-file",
      "inputParameters": {
        "http_request": {
          "uri": "${workflow.input.feedInput.env.sec-man-url}/hdfs/proxy${workflow.input.feedInput.file}?op=RENAME&destination=${workflow.input.feedInput.archivePath}${workflow.input.feedInput.datasetName}-${spark-job-launch.workflowInstanceId}",
          "method": "PUT",
          "headers":{
            "Authorization": "${workflow.input.feedInput.authHeader.authType} ${workflow.input.feedInput.authHeader.token}"
          }
        }
      },
      "type": "HTTP"
    }
  ],
  "outputParameters": {
    "status": "${spark-job-launch.output.result}"
  },
  "schemaVersion": 2
}